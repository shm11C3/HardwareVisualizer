[profile.dev]
opt-level = 0
debug = true
overflow-checks = true
lto = false

[profile.release]
opt-level = 3
debug = false
overflow-checks = true
lto = true

[package]
name = "hardware_visualizer"
version = "1.0.0"
description = "A real-time hardware monitoring tool for Windows"
authors = ["@shm11C3"]
license = "MIT"
repository = ""
edition = "2024"
rust-version = "1.88"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[build-dependencies]
tauri-build = { version = "2.3.1", features = [] }

[dependencies]
serde_json = "1.0.141"
serde = { version = "1.0.219", features = ["derive"] }
tauri = { version = "2.7.0", features = [] }
sysinfo = "0.36.1"
tauri-plugin-window-state = { version = "2.4.0" }
nvapi = "=0.1.4"
tokio = { version = "1.46.1", features = ["full"] }
tracing = "0.1.41"
tracing-subscriber = { version = "0.3.19", default-features = true, features = [
    "env-filter",
] }
chrono = "0.4.41"
rust_decimal = "1.37.2"
tauri-plugin-dialog = "2.3.1"
tauri-plugin-store = "2.3.0"
base64 = "0.22"
image = "0.25.6"
regex = "1.11.1"
tempfile = "3.20.0"
sys-locale = "0.3.2"
tauri-specta = { version = "=2.0.0-rc.21", features = ["derive", "typescript"] }
specta-typescript = "0.0.9"
specta = "=2.0.0-rc.22"
tauri-plugin-shell = "2"
tauri-plugin-sql = { version = "2", features = ["sqlite"] }
sqlx = { version = "0.8.6", features = [
    "sqlite",
    "runtime-async-std",
    "macros",
    "chrono",
] }
dirs = "6.0.0"
tauri-plugin-os = "2"
tauri-plugin-clipboard-manager = "2"
async-trait = "0.1.88"

[dependencies.uuid]
version = "1.17.0"
features = [
    "v7",                # Lets you generate random UUIDs
    "fast-rng",          # Use a faster (but still sufficiently random) RNG
    "macro-diagnostics", # Enable better diagnostics for compile-time UUIDs
]

[features]
# this feature is used for production builds or when `devPath` points to the filesystem and the built-in dev server is disabled.
# If you use cargo directly instead of tauri's cli you can use this feature flag to switch between tauri's `dev` and `build` modes.
# DO NOT REMOVE!!
custom-protocol = ["tauri/custom-protocol"]

[target.'cfg(windows)'.dependencies]
wmi = "0.17.2"
dxgi = "0.1.7"
winapi = { version = "0.3", features = ["dxgi"] }
windows = { version = "0.61.3", features = [
    "Data_Xml_Dom",
    "Win32_Foundation",
    "Win32_Security",
    "Win32_System_Threading",
    "Win32_UI_WindowsAndMessaging",
] }

[target.'cfg(target_os = "linux")'.dependencies]
ipnet = "2.11.0"

[lib]
name = "hardware_monitor_lib"
crate-type = ["staticlib", "cdylib", "rlib"]

[dev-dependencies]
tauri = { version = "2.7.0", features = ["test"] }

[target.'cfg(not(any(target_os = "android", target_os = "ios")))'.dependencies]
tauri-plugin-autostart = "2"
tauri-plugin-updater = "2"
