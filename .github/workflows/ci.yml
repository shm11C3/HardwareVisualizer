name: "CI"

on:
  pull_request:
    branches:
      - master
      - develop
      - release/**
      - develop-v*
  push:
    branches:
      - develop
      - develop-v*

# [TODO] セットアップの処理を共通化する
jobs:
  #
  # Lint Frontend
  #
  lint-frontend:
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: "windows-latest"
            args: ""

    runs-on: ${{ matrix.platform }}

    steps:
      - name: Set git to use LF
        # Lint でエラーが出るため、LF に設定
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Cache Node.js modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: Install frontend dependencies
        run: npm ci

      - name: check front end Lint
        run: npm run lint:ci

  #
  # Lint Backend
  #
  lint-backend:
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: "windows-latest"
            args: ""

    runs-on: ${{ matrix.platform }}

    steps:
      - name: Set git to use LF
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Cache Cargo
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('src-tauri/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable

      - name: check Rust Lint
        run: cargo fmt --manifest-path src-tauri/Cargo.toml -- --check

      - name: check Rust Clippy
        run: cargo clippy --manifest-path src-tauri/Cargo.toml -- -D warnings

  #
  # Testing Backend
  #
  unit-test-backend:
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: "windows-latest"
            args: ""

    runs-on: ${{ matrix.platform }}

    steps:
      - name: Set git to use LF
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Cache Cargo
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('src-tauri/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable

      - name: Testing Tauri Backend
        run: cargo test --manifest-path src-tauri/Cargo.toml -- --test-threads=1 --nocapture

  #
  # Test Build Frontend
  #
  test-build-frontend:
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: "windows-latest"
            args: ""

    runs-on: ${{ matrix.platform }}

    steps:
      - name: Set git to use LF
        # Lint でエラーが出るため、LF に設定
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Cache Node.js modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: Install frontend dependencies
        run: npm ci

      - name: check frontend build
        run: npm run build

  #
  # Test Frontend
  #
  unit-test-frontend:
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: "windows-latest"
            args: ""

    runs-on: ${{ matrix.platform }}

    permissions:
      contents: read
      pull-requests: write

    steps:
      - name: Set git to use LF
        # Lint でエラーが出るため、LF に設定
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Cache Node.js modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: Install frontend dependencies
        run: npm ci

      - name: Unit Testing Frontend
        run: npm run test:unit-cov

      - name: "Report Coverage"
        uses: davelosert/vitest-coverage-report-action@v2
        with:
          json-summary-path: coverage/coverage-summary.json
